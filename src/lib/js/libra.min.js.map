{"mappings":"AGAA,IAAM,EAAS,CACb,SAAU,eACV,OAAQ,GACR,OAAQ,CAAE,EAAG,EAAG,EAAG,CAAE,EACrB,mBAAoB,IACpB,YAAa,SACf,CDJe,OAAA,EACb,aAAc,CACZ,IAAM,EAAU,SAAS,aAAa,CAAC,OAUvC,OATA,EAAQ,EAAE,CAAG,gBACb,EAAQ,SAAS,CAAC,GAAG,CAAC,gBAAiB,gBAGvC,EAAQ,KAAK,CAAC,kBAAkB,CAAG,ACmBxB,EDnB+B,kBAAkB,CAAG,KAE/D,IAAI,CAAC,OAAO,CAAG,EACf,SAAS,sBAAsB,CAAC,iBAAiB,CAAC,EAAE,CAAC,WAAW,CAAC,GAE1D,IAAI,AACb,CAEA,MAAO,CACL,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,gBAC9B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,gBAC7B,CAEA,MAAO,CACL,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,iBAC9B,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,eAC7B,CACF,CGxBe,MAAA,EACb,OAAO,oBAAoB,CAAO,CAAE,CAClC,IAAI,EAAS,CAAC,EAER,EAAS,AFsBJ,EEtBW,MAAM,CACtB,EAAK,EAAQ,YAAY,CACzB,EAAK,EAAQ,aAAa,CAC1B,EAAQ,EAAK,EACb,EAAK,OAAO,UAAU,CAAG,EAAE,EAC3B,EAAK,OAAO,WAAW,CAAG,EAAE,EAelC,OAZA,EAAO,KAAK,CAAK,EAAK,EAAM,EAAK,EACjC,EAAO,MAAM,CAAI,EAAK,EAAM,EAAK,EAAQ,EAGrC,EAAO,MAAM,CAAG,IAClB,EAAO,MAAM,CAAG,EAChB,EAAO,KAAK,CAAG,EAAK,GAGtB,EAAO,GAAG,CAAI,AAAA,CAAA,EAAK,EAAO,MAAM,AAAN,EAAU,EAAI,OAAO,OAAO,CAAG,EAAS,AFKvD,EEL8D,MAAM,CAAC,CAAC,CACjF,EAAO,IAAI,CAAI,AAAA,CAAA,EAAK,EAAO,KAAK,AAAL,EAAS,EAAI,OAAO,OAAO,CAAG,EAAS,AFIvD,EEJ8D,MAAM,CAAC,CAAC,CAE1E,CACT,CAEA,OAAO,gBAAgB,CAAO,CAAE,CAAM,CAAE,CAAM,CAAE,CAE9C,IAAM,EAAS,EAAO,KAAK,CAAG,EAAO,KAAK,CACpC,EAAS,EAAO,MAAM,CAAG,EAAO,MAAM,CAGtC,EAAe,EAAO,IAAI,CAAG,EAAO,KAAK,CAAG,EAC5C,EAAe,EAAO,GAAG,CAAG,EAAO,MAAM,CAAG,EAC5C,EAAe,EAAO,IAAI,CAAG,EAAO,KAAK,CAAG,EAC5C,EAAe,EAAO,GAAG,CAAG,EAAO,MAAM,CAAG,CAMlD,CAAA,EAAQ,KAAK,CAAC,SAAS,CAAG,CAAC,OAAO,EAAE,EAAO,QAAQ,EAAE,EAAO,EAAE,EAJ3C,EAAe,EAIyC,EAAE,EAH1D,EAAe,EAGwD,CAAC,CAAC,AAC9F,CAEA,OAAO,qBAAqB,CAAO,CAAE,CACnC,EAAQ,KAAK,CAAC,SAAS,CAAG,0BAC5B,CACF,CD/Ce,MAAA,EACb,OAAS,CAAA,CAAM,AAQf,aAAY,CAAK,CAAE,CACjB,IAAI,CAAC,QAAQ,CAAG,EAEhB,IAAM,EAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB,GAUhD,OATA,IAAI,CAAC,gBAAgB,CAAG,CACtB,IAAK,EAAK,GAAG,CAAG,OAAO,OAAO,CAAG,ADWxB,ECX+B,MAAM,CAAC,CAAC,CAChD,KAAM,EAAK,IAAI,CAAG,OAAO,OAAO,CAAG,ADU1B,ECViC,MAAM,CAAC,CAAC,CAClD,MAAO,EAAK,KAAK,CACjB,OAAQ,EAAK,MAAM,AACrB,EAEA,IAAI,CAAC,MAAM,CAAC,GAEL,IAAI,AACb,CAEA,OAAO,CAAK,CAAE,CAEZ,IAAM,EAAS,SAAS,aAAa,CAAC,MACtC,CAAA,EAAO,GAAG,CAAG,EAAM,GAAG,CACtB,EAAO,EAAE,CAAG,CAAC,aAAa,EAAE,EAAM,EAAE,CAAA,CAAE,CACtC,EAAO,SAAS,CAAC,GAAG,CAAC,gBAGrB,EAAO,KAAK,CAAC,GAAG,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CACnD,EAAO,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CACrD,EAAO,KAAK,CAAC,KAAK,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CACvD,EAAO,KAAK,CAAC,MAAM,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAEzD,EAAO,KAAK,CAAC,kBAAkB,CAAG,ADbvB,ECa8B,kBAAkB,CAAG,KAE9D,SAAS,IAAI,CAAC,WAAW,CAAC,GAC1B,IAAI,CAAC,OAAO,CAAG,CACjB,CAQA,wBAAyB,CACvB,IAAM,EAAO,IAAI,CAAC,QAAQ,CAAC,qBAAqB,EAChD,CAAA,IAAI,CAAC,gBAAgB,CAAG,CACtB,IAAK,EAAK,GAAG,CAAG,OAAO,OAAO,CAAG,AD5BxB,EC4B+B,MAAM,CAAC,CAAC,CAChD,KAAM,EAAK,IAAI,CAAG,OAAO,OAAO,CAAG,AD7B1B,EC6BiC,MAAM,CAAC,CAAC,CAClD,MAAO,EAAK,KAAK,CACjB,OAAQ,EAAK,MAAM,AACrB,CACF,CAEA,MAAO,CACL,IAAI,CAAC,MAAM,CAAG,CAAA,EAEd,WAAW,KACT,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,OAC7B,GAGA,IAAI,CAAC,sBAAsB,GAC3B,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAAE,CAAC,CACzD,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,EAAE,CAAC,CAC3D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAC7D,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAG,CAAA,EAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAE/D,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAG,SAC7B,AAAC,SAAS,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,GAGvD,AAA8B,IAA9B,IAAI,CAAC,OAAO,CAAC,YAAY,EAAU,AAA+B,IAA/B,IAAI,CAAC,OAAO,CAAC,aAAa,CAC/D,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAC3B,OACA,KACE,AAAA,EAAU,eAAe,CACvB,IAAI,CAAC,OAAO,CACZ,IAAI,CAAC,gBAAgB,CACrB,AAAA,EAAU,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAE9C,EACA,CAAE,KAAM,CAAA,CAAK,GAGf,AAAA,EAAU,eAAe,CACvB,IAAI,CAAC,OAAO,CACZ,IAAI,CAAC,gBAAgB,CACrB,AAAA,EAAU,mBAAmB,CAAC,IAAI,CAAC,OAAO,EAGhD,CAEA,OAAQ,CACN,IAAI,CAAC,MAAM,CAAG,CAAA,EACd,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,QAE9B,AAAA,EAAU,oBAAoB,CAAC,IAAI,CAAC,OAAO,EAE3C,WAAW,KACT,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAG,UACjC,IAAI,CAAC,aAAa,EACpB,EAAG,ADnFQ,ECmFD,kBAAkB,CAC9B,CAEA,aAAc,CACZ,SAAS,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CACxC,CAEA,eAAgB,CACT,SAAS,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GACxC,SAAS,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CACxC,CACF,CHrHe,MAAA,EACb,aAAe,IAAK,AACpB,CAAA,QAAU,CAAC,CAAE,AAQb,aAAY,CAAM,CAAE,EEUpB,AAjBF,SAAS,EAAU,CAAM,CAAE,CAAM,EAC/B,IAAK,IAAM,KAAO,EAEd,AAAuB,UAAvB,OAAO,CAAM,CAAC,EAAI,EAClB,AAAgB,OAAhB,CAAM,CAAC,EAAI,EACV,MAAM,OAAO,CAAC,CAAM,CAAC,EAAI,EAK1B,CAAM,CAAC,EAAI,CAAG,CAAM,CAAC,EAAI,EAHrB,AAAC,CAAM,CAAC,EAAI,EAAE,CAAA,CAAM,CAAC,EAAI,CAAG,CAAC,CAAA,EACjC,EAAU,CAAM,CAAC,EAAI,CAAE,CAAM,CAAC,EAAI,GAKtC,OAAO,CACT,EAGY,EFTE,GAEV,IAAI,CAAC,WAAW,GAChB,IAAI,CAAC,UAAU,GACf,IAAI,CAAC,YAAY,EACnB,CAEA,aAAc,CACZ,IAAI,CAAC,OAAO,CAAG,IAAI,EACnB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,gBAAgB,CAAC,QAAS,KAC7C,IAAI,CAAC,YAAY,EACnB,EACF,CAEA,YAAa,CACX,IAAI,CAAC,MAAM,CAAG,SAAS,gBAAgB,CAAC,AEH7B,EFGoC,QAAQ,EACvD,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,AAAC,IACG,QAAlB,EAAM,OAAO,GACjB,EAAM,EAAE,CAAG,OAAO,UAAU,GAC5B,EAAM,KAAK,CAAC,MAAM,CAAG,AEPZ,EFOmB,WAAW,CACvC,EAAM,gBAAgB,CAAC,QAAS,IAAM,IAAI,CAAC,IAAI,CAAC,IAClD,EACF,CAEA,cAAe,CAEb,SAAS,gBAAgB,CAAC,UAAW,AAAC,IAChC,CAAA,AAAU,WAAV,EAAE,GAAG,EAAiB,AAAU,MAAV,EAAE,GAAG,AAAK,GAAK,IAAI,CAAC,YAAY,EAC5D,GAEA,SAAS,IAAI,CAAC,gBAAgB,CAAC,QAAS,AAAC,GAAM,IAAI,CAAC,YAAY,IAChE,SAAS,IAAI,CAAC,gBAAgB,CAAC,YAAa,AAAC,GAAM,IAAI,CAAC,YAAY,GACtE,CASA,KAAK,CAAK,CAAE,CACV,IAAI,CAAC,YAAY,CAAG,EAEpB,IAAM,EAAS,IAAI,CAAC,OAAO,CAAC,EAAM,EAAE,CAAC,EAAI,IAAI,EAAO,EAChD,AAAC,CAAA,IAAI,CAAC,OAAO,CAAC,EAAM,EAAE,CAAC,EACzB,CAAA,IAAI,CAAC,OAAO,CAAC,EAAM,EAAE,CAAC,CAAG,CAD3B,EAIA,EAAO,IAAI,GACX,IAAI,CAAC,OAAO,CAAC,IAAI,EACnB,CAGA,MAAM,CAAK,CAAE,CACX,IAAI,CAAC,YAAY,CAAG,KAEf,IAAI,CAAC,OAAO,CAAC,EAAM,EAAE,CAAC,GAC3B,IAAI,CAAC,OAAO,CAAC,EAAM,EAAE,CAAC,CAAC,KAAK,GAE5B,IAAI,CAAC,OAAO,CAAC,IAAI,GACnB,CAEA,cAAe,CACR,IAAI,CAAC,YAAY,EACtB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAC9B,CACF,Q,K,O","sources":["<anon>","src/lightbox.js","src/overlay.js","src/config.js","src/shadow.js","src/animation.js"],"sourcesContent":["const $0c04c0cc2b6985d8$var$config = {\n    selector: '[data-libra]',\n    margin: 50,\n    offset: {\n        x: 0,\n        y: 0\n    },\n    transitionDuration: 200,\n    imageCursor: 'zoom-in'\n};\nfunction $0c04c0cc2b6985d8$var$deepMerge(target, source) {\n    for(const key in source)if (typeof source[key] === 'object' && source[key] !== null && !Array.isArray(source[key])) {\n        if (!target[key]) target[key] = {};\n        $0c04c0cc2b6985d8$var$deepMerge(target[key], source[key]);\n    } else target[key] = source[key];\n    return target;\n}\nfunction $0c04c0cc2b6985d8$export$940a7873bb071df8(newConfig) {\n    $0c04c0cc2b6985d8$var$deepMerge($0c04c0cc2b6985d8$var$config, newConfig);\n}\nvar $0c04c0cc2b6985d8$export$2e2bcd8739ae039 = $0c04c0cc2b6985d8$var$config;\n\n\nclass $e49d13fc7942bae1$export$2e2bcd8739ae039 {\n    constructor(){\n        const overlay = document.createElement(\"div\");\n        overlay.id = \"libra-overlay\";\n        overlay.classList.add(\"libra-overlay\", \"libra-hidden\");\n        // Set transition duration from config\n        overlay.style.transitionDuration = (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).transitionDuration + \"ms\";\n        this.element = overlay;\n        document.getElementsByClassName(\"sveltekit-body\")[0].appendChild(overlay);\n        return this;\n    }\n    show() {\n        this.element.classList.remove(\"libra-hidden\");\n        this.element.classList.add(\"libra-visible\");\n    }\n    hide() {\n        this.element.classList.remove(\"libra-visible\");\n        this.element.classList.add(\"libra-hidden\");\n    }\n}\n\n\n\nclass $6e8e6c64a3263339$export$2e2bcd8739ae039 {\n    static calculateFinalState(element) {\n        let finals = {};\n        const margin = (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).margin;\n        const nw = element.naturalWidth;\n        const nh = element.naturalHeight;\n        const ratio = nw / nh;\n        const ww = window.innerWidth - 2 * margin;\n        const wh = window.innerHeight - 2 * margin;\n        // size image based on width first\n        finals.width = nw > ww ? ww : nw;\n        finals.height = nw > ww ? ww / ratio : nh;\n        // if height is too big, adjust based on height\n        if (finals.height > wh) {\n            finals.height = wh;\n            finals.width = wh * ratio;\n        }\n        finals.top = (wh - finals.height) / 2 + window.scrollY + margin + (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).offset.y;\n        finals.left = (ww - finals.width) / 2 + window.scrollX + margin + (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).offset.x;\n        return finals;\n    }\n    static transformMatrix(element, starts, finals) {\n        // Calculate scaling factors based on width and height interpolation\n        const scaleX = finals.width / starts.width;\n        const scaleY = finals.height / starts.height;\n        // Calculate the center of the starting and final positions\n        const startCenterX = starts.left + starts.width / 2;\n        const startCenterY = starts.top + starts.height / 2;\n        const finalCenterX = finals.left + finals.width / 2;\n        const finalCenterY = finals.top + finals.height / 2;\n        const translateX = finalCenterX - startCenterX;\n        const translateY = finalCenterY - startCenterY;\n        // Apply the transform with matrix (scale + translate)\n        element.style.transform = `matrix(${scaleX}, 0, 0, ${scaleY}, ${translateX}, ${translateY})`;\n    }\n    static resetTransformMatrix(element) {\n        element.style.transform = `matrix(1, 0, 0, 1, 0, 0)`;\n    }\n}\n\n\n\nclass $2f427fc7e1c3703f$export$2e2bcd8739ae039 {\n    isOpen = false;\n    /**\n   * ============\n   * Constructors\n   * ============\n   */ constructor(image){\n        this.original = image;\n        const rect = this.original.getBoundingClientRect();\n        this.originalPosition = {\n            top: rect.top + window.scrollY + (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).offset.y,\n            left: rect.left + window.scrollX + (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).offset.x,\n            width: rect.width,\n            height: rect.height\n        };\n        this.create(image);\n        return this;\n    }\n    create(image) {\n        // create shadow image\n        const shadow = document.createElement(\"img\");\n        shadow.src = image.src;\n        shadow.id = `libra-shadow-${image.id}`;\n        shadow.classList.add(\"libra-shadow\");\n        // style and position shadow image\n        shadow.style.top = `${this.originalPosition.top}px`;\n        shadow.style.left = `${this.originalPosition.left}px`;\n        shadow.style.width = `${this.originalPosition.width}px`;\n        shadow.style.height = `${this.originalPosition.height}px`;\n        // Set transition duration from config\n        shadow.style.transitionDuration = (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).transitionDuration + \"ms\";\n        document.body.appendChild(shadow);\n        this.element = shadow;\n    }\n    /**\n   * ============\n   * Actions\n   * ============\n   */ updateOriginalPosition() {\n        const rect = this.original.getBoundingClientRect();\n        this.originalPosition = {\n            top: rect.top + window.scrollY + (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).offset.y,\n            left: rect.left + window.scrollX + (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).offset.x,\n            width: rect.width,\n            height: rect.height\n        };\n    }\n    open() {\n        this.isOpen = true;\n        setTimeout(()=>{\n            this.element.classList.add(\"open\");\n        });\n        // Update original position before animation in case viewport changed\n        this.updateOriginalPosition();\n        this.element.style.top = `${this.originalPosition.top}px`;\n        this.element.style.left = `${this.originalPosition.left}px`;\n        this.element.style.width = `${this.originalPosition.width}px`;\n        this.element.style.height = `${this.originalPosition.height}px`;\n        this.original.style.visibility = \"hidden\";\n        if (!document.body.contains(this.element)) this.placeItself();\n        // Wait for image to load before animating\n        if (this.element.naturalWidth === 0 || this.element.naturalHeight === 0) this.element.addEventListener(\"load\", ()=>{\n            (0, $6e8e6c64a3263339$export$2e2bcd8739ae039).transformMatrix(this.element, this.originalPosition, (0, $6e8e6c64a3263339$export$2e2bcd8739ae039).calculateFinalState(this.element));\n        }, {\n            once: true\n        });\n        else (0, $6e8e6c64a3263339$export$2e2bcd8739ae039).transformMatrix(this.element, this.originalPosition, (0, $6e8e6c64a3263339$export$2e2bcd8739ae039).calculateFinalState(this.element));\n    }\n    close() {\n        this.isOpen = false;\n        this.element.classList.remove(\"open\");\n        (0, $6e8e6c64a3263339$export$2e2bcd8739ae039).resetTransformMatrix(this.element);\n        // Wait for animation to complete before showing original and destroying shadow\n        setTimeout(()=>{\n            this.original.style.visibility = \"visible\";\n            this.destroyItself();\n        }, (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).transitionDuration);\n    }\n    placeItself() {\n        document.body.appendChild(this.element);\n    }\n    destroyItself() {\n        if (!document.body.contains(this.element)) return;\n        document.body.removeChild(this.element);\n    }\n}\n\n\n\nclass $e220af4964903f87$export$2e2bcd8739ae039 {\n    currentImage = null;\n    shadows = {};\n    /**\n   * ============\n   * Initializers\n   * ============\n   */ constructor(config){\n        (0, $0c04c0cc2b6985d8$export$940a7873bb071df8)(config);\n        this.initOverlay();\n        this.initImages();\n        this.initControls();\n    }\n    initOverlay() {\n        this.overlay = new (0, $e49d13fc7942bae1$export$2e2bcd8739ae039)();\n        this.overlay.element.addEventListener(\"click\", ()=>{\n            this.closeCurrent();\n        });\n    }\n    initImages() {\n        this.images = document.querySelectorAll((0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).selector);\n        this.images.forEach((image)=>{\n            if (image.tagName !== \"IMG\") return;\n            image.id = crypto.randomUUID(); // generate unique id for each image\n            image.style.cursor = (0, $0c04c0cc2b6985d8$export$2e2bcd8739ae039).imageCursor;\n            image.addEventListener(\"click\", ()=>this.open(image)); // click image to open lightbox\n        });\n    }\n    initControls() {\n        // keyboard shortcuts\n        document.addEventListener(\"keydown\", (e)=>{\n            if (e.key === \"Escape\" || e.key === \" \") this.closeCurrent();\n        });\n        // scroll to dismiss\n        document.body.addEventListener(\"wheel\", (e)=>this.closeCurrent());\n        document.body.addEventListener(\"touchmove\", (e)=>this.closeCurrent());\n    }\n    /**\n   * ============\n   * Actions\n   * ============\n   */ // open lightbox = open shadow + show overlay\n    open(image) {\n        this.currentImage = image;\n        const shadow = this.shadows[image.id] || new (0, $2f427fc7e1c3703f$export$2e2bcd8739ae039)(image);\n        if (!this.shadows[image.id]) this.shadows[image.id] = shadow;\n        shadow.open();\n        this.overlay.show();\n    }\n    // close lightbox = remove shadow + hide overlay\n    close(image) {\n        this.currentImage = null;\n        if (!this.shadows[image.id]) return;\n        this.shadows[image.id].close();\n        this.overlay.hide();\n    }\n    closeCurrent() {\n        if (!this.currentImage) return;\n        this.close(this.currentImage);\n    }\n}\n\n\nexport {$e220af4964903f87$export$2e2bcd8739ae039 as default};\n//# sourceMappingURL=libra.min.js.map\n","import Overlay from \"./overlay\";\nimport Shadow from \"./shadow\";\nimport config from \"./config\";\nimport { setConfig } from \"./config\";\n\nexport default class LightBox {\n  currentImage = null;\n  shadows = {};\n\n  /**\n   * ============\n   * Initializers\n   * ============\n   */\n\n  constructor(config) {\n    setConfig(config);\n\n    this.initOverlay();\n    this.initImages();\n    this.initControls();\n  }\n\n  initOverlay() {\n    this.overlay = new Overlay();\n    this.overlay.element.addEventListener(\"click\", () => {\n      this.closeCurrent();\n    });\n  }\n\n  initImages() {\n    this.images = document.querySelectorAll(config.selector);\n    this.images.forEach((image) => {\n      if (image.tagName !== \"IMG\") return;\n      image.id = crypto.randomUUID(); // generate unique id for each image\n      image.style.cursor = config.imageCursor;\n      image.addEventListener(\"click\", () => this.open(image)); // click image to open lightbox\n    });\n  }\n\n  initControls() {\n    // keyboard shortcuts\n    document.addEventListener(\"keydown\", (e) => {\n      if (e.key === \"Escape\" || e.key === \" \") this.closeCurrent();\n    });\n    // scroll to dismiss\n    document.body.addEventListener(\"wheel\", (e) => this.closeCurrent());\n    document.body.addEventListener(\"touchmove\", (e) => this.closeCurrent());\n  }\n\n  /**\n   * ============\n   * Actions\n   * ============\n   */\n\n  // open lightbox = open shadow + show overlay\n  open(image) {\n    this.currentImage = image;\n\n    const shadow = this.shadows[image.id] || new Shadow(image);\n    if (!this.shadows[image.id]) {\n      this.shadows[image.id] = shadow;\n    }\n\n    shadow.open();\n    this.overlay.show();\n  }\n\n  // close lightbox = remove shadow + hide overlay\n  close(image) {\n    this.currentImage = null;\n\n    if (!this.shadows[image.id]) return;\n    this.shadows[image.id].close();\n\n    this.overlay.hide();\n  }\n\n  closeCurrent() {\n    if (!this.currentImage) return;\n    this.close(this.currentImage);\n  }\n}\n","import config from \"./config\";\n\nexport default class Overlay {\n  constructor() {\n    const overlay = document.createElement(\"div\");\n    overlay.id = \"libra-overlay\";\n    overlay.classList.add(\"libra-overlay\", \"libra-hidden\");\n\n    // Set transition duration from config\n    overlay.style.transitionDuration = config.transitionDuration + \"ms\";\n\n    this.element = overlay;\n    document.getElementsByClassName(\"sveltekit-body\")[0].appendChild(overlay);\n\n    return this;\n  }\n\n  show() {\n    this.element.classList.remove(\"libra-hidden\");\n    this.element.classList.add(\"libra-visible\");\n  }\n\n  hide() {\n    this.element.classList.remove(\"libra-visible\");\n    this.element.classList.add(\"libra-hidden\");\n  }\n}\n","const config = {\n  selector: '[data-libra]',\n  margin: 50,\n  offset: { x: 0, y: 0 },\n  transitionDuration: 200, // milliseconds\n  imageCursor: 'zoom-in',\n};\n\nfunction deepMerge(target, source) {\n  for (const key in source) {\n    if (\n      typeof source[key] === 'object' &&\n      source[key] !== null &&\n      !Array.isArray(source[key])\n    ) {\n      if (!target[key]) target[key] = {};\n      deepMerge(target[key], source[key]);\n    } else {\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nexport function setConfig(newConfig) {\n  deepMerge(config, newConfig);\n}\n\nexport default config;\n","import Animation from \"./animation.js\";\nimport config from \"./config\";\n\nexport default class Shadow {\n  isOpen = false;\n\n  /**\n   * ============\n   * Constructors\n   * ============\n   */\n\n  constructor(image) {\n    this.original = image;\n\n    const rect = this.original.getBoundingClientRect();\n    this.originalPosition = {\n      top: rect.top + window.scrollY + config.offset.y,\n      left: rect.left + window.scrollX + config.offset.x,\n      width: rect.width,\n      height: rect.height,\n    };\n\n    this.create(image);\n\n    return this;\n  }\n\n  create(image) {\n    // create shadow image\n    const shadow = document.createElement(\"img\");\n    shadow.src = image.src;\n    shadow.id = `libra-shadow-${image.id}`;\n    shadow.classList.add(\"libra-shadow\");\n\n    // style and position shadow image\n    shadow.style.top = `${this.originalPosition.top}px`;\n    shadow.style.left = `${this.originalPosition.left}px`;\n    shadow.style.width = `${this.originalPosition.width}px`;\n    shadow.style.height = `${this.originalPosition.height}px`;\n    // Set transition duration from config\n    shadow.style.transitionDuration = config.transitionDuration + \"ms\";\n\n    document.body.appendChild(shadow);\n    this.element = shadow;\n  }\n\n  /**\n   * ============\n   * Actions\n   * ============\n   */\n\n  updateOriginalPosition() {\n    const rect = this.original.getBoundingClientRect();\n    this.originalPosition = {\n      top: rect.top + window.scrollY + config.offset.y,\n      left: rect.left + window.scrollX + config.offset.x,\n      width: rect.width,\n      height: rect.height,\n    };\n  }\n\n  open() {\n    this.isOpen = true;\n\n    setTimeout(() => {\n      this.element.classList.add(\"open\");\n    });\n\n    // Update original position before animation in case viewport changed\n    this.updateOriginalPosition();\n    this.element.style.top = `${this.originalPosition.top}px`;\n    this.element.style.left = `${this.originalPosition.left}px`;\n    this.element.style.width = `${this.originalPosition.width}px`;\n    this.element.style.height = `${this.originalPosition.height}px`;\n\n    this.original.style.visibility = \"hidden\";\n    if (!document.body.contains(this.element)) this.placeItself();\n\n    // Wait for image to load before animating\n    if (this.element.naturalWidth === 0 || this.element.naturalHeight === 0) {\n      this.element.addEventListener(\n        \"load\",\n        () => {\n          Animation.transformMatrix(\n            this.element,\n            this.originalPosition,\n            Animation.calculateFinalState(this.element),\n          );\n        },\n        { once: true },\n      );\n    } else {\n      Animation.transformMatrix(\n        this.element,\n        this.originalPosition,\n        Animation.calculateFinalState(this.element),\n      );\n    }\n  }\n\n  close() {\n    this.isOpen = false;\n    this.element.classList.remove(\"open\");\n\n    Animation.resetTransformMatrix(this.element);\n    // Wait for animation to complete before showing original and destroying shadow\n    setTimeout(() => {\n      this.original.style.visibility = \"visible\";\n      this.destroyItself();\n    }, config.transitionDuration);\n  }\n\n  placeItself() {\n    document.body.appendChild(this.element);\n  }\n\n  destroyItself() {\n    if (!document.body.contains(this.element)) return;\n    document.body.removeChild(this.element);\n  }\n}\n","import config from './config';\n\nexport default class Animation {\n  static calculateFinalState(element) {\n    let finals = {}\n\n    const margin = config.margin;\n    const nw = element.naturalWidth;\n    const nh = element.naturalHeight;\n    const ratio = nw / nh;\n    const ww = window.innerWidth - 2*margin;\n    const wh = window.innerHeight - 2*margin;\n\n    // size image based on width first\n    finals.width =  (nw > ww) ? ww : nw;\n    finals.height = (nw > ww) ? ww / ratio : nh;\n\n    // if height is too big, adjust based on height\n    if (finals.height > wh) {\n      finals.height = wh;\n      finals.width = wh * ratio;\n    }\n\n    finals.top = (wh - finals.height) / 2 + window.scrollY + margin + config.offset.y;\n    finals.left = (ww - finals.width) / 2 + window.scrollX + margin + config.offset.x;\n\n    return finals;\n  }\n\n  static transformMatrix(element, starts, finals) {\n    // Calculate scaling factors based on width and height interpolation\n    const scaleX = finals.width / starts.width;\n    const scaleY = finals.height / starts.height;\n\n    // Calculate the center of the starting and final positions\n    const startCenterX = starts.left + starts.width / 2;\n    const startCenterY = starts.top + starts.height / 2;\n    const finalCenterX = finals.left + finals.width / 2;\n    const finalCenterY = finals.top + finals.height / 2;\n\n    const translateX = finalCenterX - startCenterX;\n    const translateY = finalCenterY - startCenterY;\n\n    // Apply the transform with matrix (scale + translate)\n    element.style.transform = `matrix(${scaleX}, 0, 0, ${scaleY}, ${translateX}, ${translateY})`;\n  }\n\n  static resetTransformMatrix(element) {\n    element.style.transform = `matrix(1, 0, 0, 1, 0, 0)`;\n  }\n}\n"],"names":["$0c04c0cc2b6985d8$var$config","selector","margin","offset","x","y","transitionDuration","imageCursor","$e49d13fc7942bae1$export$2e2bcd8739ae039","overlay","document","createElement","id","classList","add","style","element","getElementsByClassName","appendChild","show","remove","hide","$6e8e6c64a3263339$export$2e2bcd8739ae039","calculateFinalState","finals","nw","naturalWidth","nh","naturalHeight","ratio","ww","window","innerWidth","wh","innerHeight","width","height","top","scrollY","left","scrollX","transformMatrix","starts","scaleX","scaleY","startCenterX","startCenterY","finalCenterX","finalCenterY","transform","resetTransformMatrix","$2f427fc7e1c3703f$export$2e2bcd8739ae039","isOpen","image","original","rect","getBoundingClientRect","originalPosition","create","shadow","src","body","updateOriginalPosition","open","setTimeout","visibility","contains","placeItself","addEventListener","once","close","destroyItself","removeChild","$e220af4964903f87$export$2e2bcd8739ae039","currentImage","shadows","config","$0c04c0cc2b6985d8$var$deepMerge","target","source","key","Array","isArray","initOverlay","initImages","initControls","closeCurrent","images","querySelectorAll","forEach","tagName","crypto","randomUUID","cursor","e","default"],"version":3,"file":"libra.min.js.map"}